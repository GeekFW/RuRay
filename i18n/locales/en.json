{
  "common": {
    "save": "Save",
    "cancel": "Cancel",
    "close": "Close",
    "confirm": "Confirm",
    "delete": "Delete",
    "edit": "Edit",
    "add": "Add",
    "refresh": "Refresh",
    "loading": "Loading...",
    "success": "Success",
    "error": "Error",
    "warning": "Warning",
    "info": "Info",
    "browse": "Browse",
    "clear": "Clear",
    "recheck": "Recheck",
    "export": "Export",
    "connect": "Start Connection",
    "disconnect": "Disconnect",
    "start": "Start",
    "stop": "Stop",
    "test": "Test",
    "activate": "Activate",
    "switch": "Switch",
    "connected": "Connected",
    "disconnected": "Disconnected",
    "connecting": "Connecting",
    "upload": "Upload",
    "download": "Download",
    "totalTraffic": "Total Traffic",
    "uptime": "Uptime",
    "proxyMode": "Proxy Mode",
    "switchServer": "Switch Server",
    "global": "Global Proxy",
    "pac": "PAC Mode",
    "direct": "Direct Mode",
    "unknown": "Unknown",
    "reload": "Reload",
    "resetDefault": "Reset Default",
    "running": "Running",
    "notRunning": "Not Running",
    "stopped": "Stopped",
    "unknownError": "Unknown Error",
    "loadFailed": "Load Failed",
    "saveSuccess": "Save Success",
    "saveFailed": "Save Failed",
    "saveConfig": "Save Configuration",
    "pause": "Pause",
    "resume": "Resume",
    "visit": "Visit"
  },
  "contextMenu": {
    "toggleThemeMode": "Toggle Theme Mode",
    "switchThemeColor": "Switch Theme Color",
    "openAppDirectory": "Open App Directory",
    "openDebugMode": "Open Debug Mode",
    "openSystemProxy": "Open System Proxy",
    "exitApp": "Exit App",
    "themeModeSwitched": "Theme mode switched",
    "currentThemeMode": "Current theme mode: {mode}",
    "themeColorSwitched": "Theme color switched",
    "currentThemeColor": "Current theme color: {color}",
    "appDirectoryOpened": "App directory opened",
    "appDirectoryOpenedDesc": "App directory has been opened in file manager",
    "openAppDirectoryFailed": "Failed to open app directory",
    "exitAppFailed": "Failed to exit app"
  },
  "theme": {
    "light": "Light",
    "dark": "Dark"
  },
  "header": {
    "title": "RuRay",
    "updateXrayCore": "Update Xray Core",
    "minimalMode": "Minimal Mode",
    "settings": "Settings",
    "updateStatus": {
      "checking": "Checking for updates...",
      "latest": "Already latest version",
      "error": "Update check failed"
    },
    "closeConfirm": {
      "title": "Close Application",
      "message": "How would you like to close the application?",
      "closeApp": "Close Directly",
      "minimizeToTray": "Minimize to Tray"
    }
  },
  "loadingScreen": {
    "initializing": "Initializing...",
    "checkingXrayCore": "Checking Xray Core...",
    "loadingConfig": "Loading configuration...",
    "preparingUI": "Preparing interface...",
    "startupComplete": "Startup complete",
    "subtitle": "Xray Core Desktop Client"
  },
  "update": {
    "checkAndDownload": "Check and Download",
    "downloadProgress": "Download Progress",
    "updating": "Updating...",
    "startUpdate": "Start Update",
    "currentVersion": "Current Version"
  },
  "settings": {
    "title": "Settings",
    "language": {
      "title": "Language Settings",
      "interfaceLanguage": "Interface Language"
    },
    "theme": {
      "title": "Theme Settings",
      "colorMode": "Color Mode",
      "themeColor": "Theme Color",
      "followSystem": "Follow System",
      "lightMode": "Light Mode",
      "darkMode": "Dark Mode",
      "colors": {
        "red": "Red",
        "blue": "Blue",
        "green": "Green",
        "purple": "Purple",
        "orange": "Orange",
        "pink": "Pink"
      }
    },
    "proxy": {
      "title": "Proxy Settings",
      "httpPort": "HTTP Proxy Port",
      "socksPort": "SOCKS Proxy Port",
      "autoConnect": "Auto Connect on Startup",
      "advancedSettings": "Inbound Advanced Settings",
      "enableSniffing": "Enable Traffic Sniffing",
      "enableUdp": "Enable UDP Forwarding",
      "allowTransparent": "Allow Transparent Proxy",
      "authMethod": "Authentication Method",
      "noAuth": "No Authentication",
      "password": "Username/Password"
    },
    "routing": {
      "title": "Routing Settings",
      "domainStrategy": "Domain Strategy",
      "rules": "Routing Rules",
      "addRule": "Add Rule"
    },
    "core": {
      "title": "Xray Core Settings",
      "path": "Xray Core Path",
      "browse": "Browse",
      "clear": "Clear",
      "found": "Xray Core Found",
      "notFound": "Xray Core Not Found",
      "recheck": "Recheck",
      "defaultPathHint": "Default Path",
      "selectFile": "Select File",
      "logStream": "Enable Log Stream",
      "logStreamDesc": "Enable real-time Xray log viewing in the advanced log viewer"
    },
    "tabs": {
      "basic": "Basic Settings",
      "routing": "Routing Settings",
      "core": "Core Settings",
      "tun": "TUN Configuration",
      "logs": "Log Settings",
      "about": "About"
    },
    "about": {
      "title": "About RuRay",
      "projectInfo": "Project Information",
      "projectName": "RuRay",
      "projectDescription": "A modern Xray client built with Tauri and Vue, providing a clean and user-friendly proxy management interface.",
      "githubRepository": "GitHub Repository",
      "repositoryDesc": "View project source code and contribution guidelines",
      "description": "Project Description",
      "descriptionText": "A modern Xray client built with Tauri and Vue, providing a clean and user-friendly proxy management interface.",
      "openSourceLibraries": "Open Source Libraries",
      "versionInfo": "Version Information",
      "currentVersion": "Current Version",
      "libraries": {
        "tauri": "Cross-platform application framework",
        "nuxt": "Vue.js framework",
        "vue": "Frontend framework",
        "tailwindcss": "CSS framework",
        "rust": "Systems programming language",
        "xraycore": "Proxy core",
        "tauriVersion": "v2.x",
        "nuxtVersion": "v3.x",
        "vueVersion": "v3.x",
        "tailwindVersion": "v3.x",
        "rustDesc": "Backend",
        "xraycoreDesc": "Proxy Engine"
      },
      "version": "Version Information",
      "latest": "Latest",
      "visitGithub": "Visit GitHub",
      "repository": "Source Repository"
    },
    "saveSuccess": "Save Success",
    "saveError": "Save Failed"
  },
  "routing": {
    "rule": "Rule",
    "outboundTag": "Outbound Tag",
    "ruleType": "Rule Type",
    "ipRules": "IP Rules",
    "domainRules": "Domain Rules",
    "selectPresetOrManual": "Select preset or manual input",
    "manualIpRule": "Manual IP rule input",
    "manualDomainRule": "Manual domain rule input",
    "proxy": "Proxy",
    "direct": "Direct",
    "block": "Block",
    "privateAddress": "Private Address",
    "chinaMainland": "China Mainland",
    "nonChinaMainland": "Non-China Mainland",
    "chinaMainlandSites": "China Mainland Sites",
    "privateDomains": "Private Domains",
    "nonChinaMainlandSites": "Non-China Mainland Sites"
  },
  "core": {
    "selecting": "Selecting...",
    "defaultPath": "Default Path",
    "customPath": "Custom Path",
    "geoFilesFound": "Geo files found",
    "geoFilesMissing": "Geo files missing",
    "download": "Download",
    "setting": "Setting...",
    "oneClickSetup": "One-click Setup"
  },
  "serverList": {
    "title": "Server List",
    "systemProxy": {
      "title": "System Proxy",
      "enabled": "Enabled",
      "disabled": "Disabled"
    },
    "proxyMode": {
      "title": "Proxy Mode",
      "direct": "Direct Mode",
      "global": "Global Proxy",
      "pac": "PAC Mode"
    },
    "server": {
      "running": "Running",
      "testConnection": "Test Connection",
      "testConfig": "Test Configuration",
      "edit": "Edit",
      "openConfig": "Open Configuration",
      "regenerateConfig": "Regenerate Configuration",
      "delete": "Delete",
      "address": "Address",
      "ping": "Ping",
      "stopProxy": "Stop Proxy",
      "activateServer": "Activate Server"
    },
    "empty": {
      "message": "No server configuration",
      "addFirst": "Add first server"
    },
    "dialog": {
      "editTitle": "Edit Server",
      "addTitle": "Add Server"
    },
    "form": {
      "name": "Server Name",
      "namePlaceholder": "Enter server name",
      "protocol": "Protocol Type",
      "address": "Server Address",
      "port": "Port",
      "uuid": "UUID",
      "security": "Security",
      "network": "Network",
      "wsPath": "WebSocket Path",
      "h2Path": "HTTP/2 Path",
      "grpcService": "gRPC Service",
      "host": "Host Header",
      "password": "Password",
      "username": "Username",
      "usernameOptional": "Username (Optional)",
      "passwordOptional": "Password (Optional)",
      "enableTls": "Enable TLS",
      "sni": "SNI",
      "alpn": "ALPN",
      "alpnHelp": "Multiple values separated by commas",
      "fingerprint": "Fingerprint",
      "enableMux": "Enable Mux"
    },
    "messages": {
      "testSuccess": "Connection test successful",
      "testSuccessDesc": "Server connection test successful, network communication is normal",
      "testFailed": "Connection test failed",
      "testFailedDesc": "Server {name} connection test failed, please check network connection and server configuration",
      "testError": "Test error",
      "testErrorDesc": "Error occurred during connection test: {error}",
      "configTestSuccess": "Configuration test successful",
      "configTestSuccessDesc": "Server configuration validation passed, all settings are correct",
      "configTestFailed": "Configuration test failed",
      "configTestFailedDesc": "Server {name} configuration test failed: {error}",
      "serverDeleted": "Server deleted",
      "serverDeletedDesc": "Server {name} has been successfully removed from the list",
      "deleteFailed": "Delete failed",
      "deleteFailedDesc": "Failed to delete server, please check the error message and try again",
      "configFileOpened": "Configuration file opened",
      "configFileOpenedDesc": "Server configuration file has been opened in the default editor",
      "openFailed": "Open failed",
      "openFailedDesc": "Failed to open configuration file: {error}",
      "serverUpdated": "Server updated",
      "serverUpdatedDesc": "Server {name} configuration has been successfully updated",
      "serverAdded": "Server added",
      "serverAddedDesc": "New server has been successfully added to the server list",
      "saveFailed": "Save failed",
      "saveFailedDesc": "Failed to save server configuration: {error}",
      "proxyModeChanged": "Proxy mode changed",
      "proxyModeChangedDesc": "Proxy mode has been successfully changed, new proxy settings are now in effect",
      "proxyModeChangeFailed": "Proxy mode change failed",
      "proxyModeChangeFailedDesc": "Proxy mode change failed: {error}",
      "proxyStopped": "Proxy stopped",
      "proxyStoppedDesc": "Proxy service has been stopped, network traffic restored to direct connection",
      "proxyStarted": "Proxy started",
      "proxyStartedDesc": "Proxy service has been successfully started and is forwarding traffic",
      "operationFailed": "Operation failed",
      "operationFailedDesc": "Operation execution failed: {error}",
      "configRefreshed": "Configuration refreshed",
      "configRefreshedDesc": "Server configuration has been regenerated",
      "refreshFailed": "Refresh failed",
      "refreshFailedDesc": "Failed to refresh configuration: {error}",
      "loadFailed": "Load failed",
      "loadFailedDesc": "Failed to load data: {error}",
      "loadProxyModeFailed": "Load proxy mode failed",
      "loadProxyModeFailedDesc": "Failed to load proxy mode: {error}",
      "statusRefreshed": "Status refreshed",
      "statusRefreshedDesc": "Server status updated",
      "refreshStatusFailedDesc": "Failed to refresh status: {error}",
      "configInvalid": "Invalid configuration",
      "connectionFailed": "Connection failed"
    }
  },
  "zen": {
    "title": "Minimal Mode",
    "zenMode": "Minimal Mode",
    "uploadSpeed": "Upload",
    "downloadSpeed": "Download",
    "sessionTraffic": "Session Traffic",
    "totalTraffic": "Total Traffic",
    "uptime": "Uptime",
    "proxyMode": "Proxy Mode",
    "connectButton": "Start Connection",
    "disconnectButton": "Disconnect",
    "switchServer": "Switch Server",
    "selectServer": "Select Server",
    "globalProxy": "Global",
    "directProxy": "Direct",
    "unknown": "Unknown"
  },
  "minimalMode": {
    "upload": "Upload",
    "download": "Download",
    "totalTraffic": "Total Traffic",
    "switchServer": "Switch Server",
    "proxyMode": "Proxy Mode",
    "selectServer": "Select Server",
    "exampleServer1": "Example Server 1",
    "exampleServer2": "Example Server 2",
    "proxyModes": {
      "direct": "Direct",
      "global": "Global",
      "pac": "PAC"
    }
  },
  "logViewer": {
    "title": "Log Viewer",
    "autoScroll": "Auto Scroll",
    "noLogs": "No logs",
    "showingLogs": "Showing Logs",
    "totalLogs": "Total Logs",
    "advancedViewer": "Core Logs",
    "levels": {
      "all": "All",
      "info": "Info",
      "warn": "Warning",
      "error": "Error"
    },
    "fetchLogsFailed": "Fetch logs failed",
    "exportLogsFailed": "Export logs failed"
  },
  "advancedLogViewer": {
    "title": "Advanced Log Viewer",
    "connected": "Connected",
    "disconnected": "Disconnected",
    "waitingForLogs": "Waiting for log data...",
    "notConnected": "Not connected to Xray Core",
    "totalLogs": "Total {count} logs",
    "paused": "Paused"
  },
  "logs": {
    "title": "Log Settings",
    "fileInfo": "Log File Information",
    "filePath": "Log File Path",
    "fileSize": "File Size",
    "logEntries": "Log Entries",
    "management": "Log Management",
    "clearLogs": "Clear Log File",
    "clearDescription": "Clear existing log content without affecting future log writing",
    "exportLogs": "Export Log File",
    "exportDescription": "Export current log file to specified location",
    "confirmClear": "Confirm Clear Log",
    "clearWarning": "This operation will clear all existing log content, but will not affect future log writing. This operation cannot be undone.",
    "confirmClearButton": "Confirm Clear",
    "calculating": "Calculating...",
    "counting": "Counting...",
    "getting": "Getting..."
  },
  "logSettings": {
    "title": "Log Settings",
    "fileInfo": {
      "title": "Log File Information",
      "logPath": "Log File Path",
      "logPathHelp": "Current log file storage path",
      "loading": "Loading...",
      "fileSize": "File Size",
      "fileSizeHelp": "Current log file size",
      "calculating": "Calculating...",
      "logCount": "Log Entry Count",
      "logCountHelp": "Total number of entries in log file",
      "counting": "Counting...",
      "entries": "entries"
    },
    "management": {
      "title": "Log Management",
      "clearTitle": "Clear Log File",
      "clearDesc": "Clear existing log content without affecting future log writing. This operation cannot be undone.",
      "clearButton": "Clear Logs",
      "exportTitle": "Export Log File",
      "exportDesc": "Export current log file to specified location for analysis and backup.",
      "exportButton": "Export Logs",
      "clearTunTitle": "Delete TUN Device Logs",
      "clearTunDesc": "Clear TUN device log file containing network connection and routing information. This operation cannot be undone.",
      "clearTunButton": "Delete TUN Logs"
    },
    "confirmClear": {
      "title": "Confirm Clear Logs",
      "question": "Are you sure you want to clear the log file?",
      "warning": "This operation will clear all existing log content, but will not affect future log writing. This operation cannot be undone.",
      "filePath": "File Path",
      "currentSize": "Current Size",
      "logEntries": "Log Entries",
      "confirmButton": "Confirm Clear"
    },
    "confirmClearTun": {
      "title": "Confirm Delete TUN Logs",
      "question": "Are you sure you want to delete the TUN device log file?",
      "warning": "This operation will delete all TUN device log records, including network connection and routing information. This operation cannot be undone.",
      "description": "TUN device logs contain detailed records of network connections, routing configurations, and data transmission.",
      "fileLocation": "Log file location: tun.log file in the program running directory",
      "confirmButton": "Confirm Delete"
    },
    "messages": {
      "getInfoFailed": "Get log information failed",
      "refreshSuccess": "Refresh successful",
      "refreshSuccessDesc": "Log information updated",
      "openDirFailed": "Open directory failed",
      "clearSuccess": "Clear successful",
      "clearSuccessDesc": "Log file cleared",
      "clearFailed": "Clear failed",
      "exportSuccess": "Export successful",
      "exportFailed": "Export failed",
      "clearTunSuccess": "TUN logs deleted successfully",
      "clearTunSuccessDesc": "TUN device log file has been deleted and recreated",
      "clearTunFailed": "TUN logs deletion failed"
    }
  },
  "tun": {
    "title": "TUN Configuration",
    "status": "TUN Device Status",
    "basicConfig": "Basic Configuration",
    "routeConfig": "Route Configuration",
    "deviceName": "Device Name",
    "ipAddress": "IP Address",
    "subnetMask": "Subnet Mask",
    "mtuSize": "MTU Size",
    "gateway": "Gateway Address",
    "routePriority": "Route Priority",
    "resetDefault": "Reset Default",
    "reload": "Reload",
    "saveConfig": "Save Configuration",
    "running": "Running",
    "notRunning": "Not Running"
  },
  "statusBar": {
    "proxyStatus": "Proxy Status",
    "proxyMode": "Proxy Mode",
    "currentServer": "Current Server",
    "tunMode": "TUN Mode",
    "proxyModeText": "Proxy Mode",
    "networkSpeed": "Network Speed",
    "trafficStats": "Traffic Statistics",
    "cpuUsage": "CPU Usage",
    "memoryUsage": "Memory Usage",
    "memory": "Memory",
    "uptime": "Uptime",
    "getTunStatusFailed": "Get TUN status failed",
    "updateSystemStatsFailed": "Update system stats failed",
    "listenProxyModeChangeFailed": "Listen proxy mode change failed",
    "tunModeEnabled": "TUN mode enabled",
    "tunModeEnabledDesc": "TUN mode successfully enabled",
    "tunModeDisabled": "TUN mode disabled",
    "tunModeDisabledDesc": "TUN mode successfully disabled",
    "toggleTunModeFailed": "Toggle TUN mode failed",
    "tunModeToggleFailed": "TUN mode toggle failed",
    "proxyModes": {
      "direct": "Direct",
      "global": "Global",
      "pac": "PAC"
    }
  },
  "tunConfig": {
    "title": "TUN Configuration",
    "deviceStatus": "Device Status",
    "basicConfig": "Basic Configuration",
    "deviceName": "Device Name",
    "deviceNameHelp": "Name of the TUN device",
    "ipAddress": "IP Address",
    "ipAddressHelp": "IP address of the TUN device",
    "netmask": "Netmask",
    "netmaskHelp": "Netmask of the TUN device",
    "mtuSize": "MTU Size",
    "mtuSizeHelp": "Maximum Transmission Unit size",
    "routeConfig": "Route Configuration",
    "gatewayAddress": "Gateway Address",
    "gatewayAddressHelp": "Default gateway address",
    "routePriority": "Route Priority",
    "routePriorityHelp": "Route priority setting",
    "bypassIps": "Bypass IPs",
    "bypassIpsHelp": "Specify IP addresses or CIDR ranges that should bypass the proxy, supports multiple addresses",
    "addBypassIp": "Add Bypass IP",
    "loadConfigFailed": "Load configuration failed",
    "loadConfigFailedDesc": "Failed to load TUN configuration",
    "invalidConfig": "Invalid configuration",
    "invalidConfigDesc": "TUN configuration validation failed, please check input",
    "configSaved": "Configuration saved",
    "saveConfigFailed": "Save configuration failed",
    "saveConfigFailedDesc": "Failed to save TUN configuration",
    "getTunStatusFailed": "Get TUN status failed",
    "validation": {
      "ipAddressRequired": "IP address cannot be empty",
      "invalidIpAddress": "Invalid IP address format",
      "netmaskRequired": "Netmask cannot be empty",
      "invalidNetmask": "Invalid netmask format",
      "gatewayRequired": "Gateway address cannot be empty",
      "invalidGateway": "Invalid gateway address format"
    },
    "errors": {
      "adminRequired": "Administrator privileges required to start TUN mode. Please run the program as administrator",
      "noProxyRunning": "Cannot start TUN mode: No proxy server is running. Please start the proxy server first",
      "startFailed": "Failed to start TUN mode",
      "stopFailed": "Failed to stop TUN mode",
      "configInvalid": "Invalid TUN configuration, please check configuration parameters",
      "deviceBusy": "TUN device is busy, please try again later"
    }
  },
  "app": {
    "loadServerListFailed": "Load server list failed",
    "connectSuccess": "Connection successful",
    "connectedToServer": "Connected to server",
    "startProxyFailed": "Start proxy failed",
    "connectFailed": "Connection failed",
    "cannotConnectToServer": "Cannot connect to server",
    "disconnected": "Disconnected",
    "proxyServiceStopped": "Proxy service stopped",
    "stopProxyFailed": "Stop proxy failed",
    "disconnectFailed": "Disconnect failed",
    "cannotStopProxyService": "Cannot stop proxy service",
    "getNetworkSpeedFailed": "Get network speed failed",
    "networkStatsContinuousFailure": "Network stats continuous failure, retrying after 30 seconds",
    "getInitialNetworkStatsFailed": "Get initial network stats failed",
    "xrayCoreNotFound": "Xray Core not found",
    "xrayCoreNotFoundDesc": "xray-core executable not found at path 'xrayPath'. Please configure the correct Xray Core path in settings.",
    "openSettings": "Open Settings",
    "ignore": "Ignore",
    "checkXrayCoreFailed": "Check Xray Core failed",
    "loadProxyModeFailed": "Load proxy mode failed",
    "getProxyStatusFailed": "Get proxy status failed",
    "proxyStatusUpdated": "Proxy status updated",
    "proxyModeUpdated": "Proxy mode updated",
    "listenProxyStatusChangeFailed": "Listen proxy status change failed",
    "noOtherServers": "No other servers",
    "onlyOneServerConfig": "Only one server configuration",
    "noAvailableServers": "No available servers",
    "pleaseAddServerFirst": "Please add server configuration first",
    "connected": "Connected",
    "currentlyConnectedToServer": "Currently connected to server"
  }
}